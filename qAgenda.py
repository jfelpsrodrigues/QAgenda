# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
from sys import path
path.append('build')
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _qAgenda
else:
    import _qAgenda

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def LeListaLojas():
    return _qAgenda.LeListaLojas()

def LeListaClientes():
    return _qAgenda.LeListaClientes()

def LeListaAgenda(file_name):
    return _qAgenda.LeListaAgenda(file_name)

def EscreveListaClientes(l):
    return _qAgenda.EscreveListaClientes(l)

def EscreveListaLojas(l):
    return _qAgenda.EscreveListaLojas(l)

def EscreveListaAgenda(file_name, l):
    return _qAgenda.EscreveListaAgenda(file_name, l)

def CadastroLoja(name, bairro, ramo, cnpj, senha):
    return _qAgenda.CadastroLoja(name, bairro, ramo, cnpj, senha)

def CadastroCliente(nome, bairro, senha, cpf, idade):
    return _qAgenda.CadastroCliente(nome, bairro, senha, cpf, idade)

def RealizarAgendamento(file_name, dia, horario, cpf, name):
    return _qAgenda.RealizarAgendamento(file_name, dia, horario, cpf, name)

def OrdenacaoCliente():
    return _qAgenda.OrdenacaoCliente()

def OrdenacaoLoja():
    return _qAgenda.OrdenacaoLoja()

def OrdenacaoAgendamento(file_name):
    return _qAgenda.OrdenacaoAgendamento(file_name)

def RemoverAgendamento(file_name, cpf):
    return _qAgenda.RemoverAgendamento(file_name, cpf)

def RemoverLoja(cnpj):
    return _qAgenda.RemoverLoja(cnpj)

def RemoverCliente(cpf):
    return _qAgenda.RemoverCliente(cpf)


